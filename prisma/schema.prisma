// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  ID           Int     @id @default(autoincrement())
  username     String  @unique
  email        String  @unique
  Phonenumber  String  @unique
  otp          String? @unique
  refreshToken String? @db.LongText
}

model Expertise {
  ID      Int    @id @default(autoincrement())
  name    String @unique
  percent String
}

model Project {
  ID           Int     @id @default(autoincrement())
  name         String  @unique
  description  String  @unique
  technologies String  @db.LongText
  Image        Image[]
}

model Collaborations {
  ID         Int     @id @default(autoincrement())
  name       String  @unique
  position   String
  startMonth String
  startyear  String
  endMonth   String?
  endYear    String?
  url        String?
  logo       logo?
}

model Concat {
  ID    Int    @id @default(autoincrement())
  title String @unique
  link  String @unique
  logo  logo?
}

model Image {
  ID        Int     @id @default(autoincrement())
  fileName  String  @unique
  src       String  @unique
  alt       String
  project   Project @relation(fields: [projectID], references: [ID])
  projectID Int
}

model logo {
  ID              Int             @id @default(autoincrement())
  src             String          @unique
  alt             String
  fileName        String          @unique
  collaboration   Collaborations? @relation(fields: [collaborationID], references: [ID])
  collaborationID Int?            @unique
  concat          Concat?         @relation(fields: [concatID], references: [ID])
  concatID        Int?            @unique
}

model Setting {
  ID      Int    @id @default(autoincrement())
  name    String @unique
  content String
}
